<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WatsonWebsocket</name>
    </assembly>
    <members>
        <member name="T:WatsonWebsocket.ClientConnectedEventArgs">
            <summary>
            Event arguments for when a client connects to the server.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.ClientConnectedEventArgs.IpPort">
            <summary>
            The IP:port of the client.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.ClientConnectedEventArgs.HttpRequest">
            <summary>
            The HttpListenerRequest from the client.  Helpful for accessing HTTP request related metadata such as the querystring.
            </summary>
        </member>
        <member name="T:WatsonWebsocket.ClientDisconnectedEventArgs">
            <summary>
            Event arguments for when a client disconnects from the server.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.ClientDisconnectedEventArgs.IpPort">
            <summary>
            The IP:port of the client.
            </summary>
        </member>
        <member name="T:WatsonWebsocket.MessageReceivedEventArgs">
            <summary>
            Event arguments for when a message is received.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.MessageReceivedEventArgs.IpPort">
            <summary>
            The IP:port of the sender.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.MessageReceivedEventArgs.Data">
            <summary>
            The data received.
            </summary>
        </member>
        <member name="F:WatsonWebsocket.MessageReceivedEventArgs.MessageType">
            <summary>
            The type of payload included in the message (Binary or Text).
            </summary>
        </member>
        <member name="T:WatsonWebsocket.Statistics">
            <summary>
            WatsonWebsocket statistics.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.StartTime">
            <summary>
            The time at which the client or server was started.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.UpTime">
            <summary>
            The amount of time which the client or server has been up.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.ReceivedBytes">
            <summary>
            The number of bytes received.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.ReceivedMessages">
            <summary>
            The number of messages received.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.ReceivedMessageSizeAverage">
            <summary>
            Average received message size in bytes.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.SentBytes">
            <summary>
            The number of bytes sent.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.SentMessages">
            <summary>
            The number of messages sent.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.Statistics.SentMessageSizeAverage">
            <summary>
            Average sent message size in bytes.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.Statistics.#ctor">
            <summary>
            Initialize the statistics object.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.Statistics.ToString">
            <summary>
            Return human-readable version of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WatsonWebsocket.Statistics.Reset">
            <summary>
            Reset statistics other than StartTime and UpTime.
            </summary>
        </member>
        <member name="T:WatsonWebsocket.WatsonWsClient">
            <summary>
            Watson websocket client.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsClient.AcceptInvalidCertificates">
            <summary>
            Indicate whether or not invalid or otherwise unverifiable certificates should be accepted.  Default is true.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsClient.Connected">
            <summary>
            Indicates whether or not the client is connected to the server.
            </summary>
        </member>
        <member name="E:WatsonWebsocket.WatsonWsClient.MessageReceived">
            <summary>
            Event fired when a message is received.
            Parameter 1: byte array containing the data.
            </summary>
        </member>
        <member name="E:WatsonWebsocket.WatsonWsClient.ServerConnected">
            <summary>
            Event fired when the client connects successfully to the server. 
            </summary>
        </member>
        <member name="E:WatsonWebsocket.WatsonWsClient.ServerDisconnected">
            <summary>
            Event fired when the client disconnects from the server.
            </summary>
        </member>
        <member name="F:WatsonWebsocket.WatsonWsClient.Logger">
            <summary>
            Method to invoke when sending a log message.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsClient.Stats">
            <summary>
            Statistics.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Initializes the Watson websocket client.
            Be sure to call 'Start()' to start the client and connect to the server.
            </summary>
            <param name="serverIp">IP address of the server.</param>
            <param name="serverPort">TCP port of the server.</param>
            <param name="ssl">Enable or disable SSL.</param> 
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.#ctor(System.Uri)">
            <summary>
            Initializes the Watson websocket client.
            Be sure to call 'Start()' to start the client and connect to the server.
            </summary>
            <param name="uri">The URI of the server endpoint.</param> 
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.Dispose">
            <summary>
            Tear down the client and dispose of background workers.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.Start">
            <summary>
            Start the client and connect to the server.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.SendAsync(System.String)">
            <summary>
            Send text data to the server asynchronously.
            </summary>
            <param name="data">String data.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.SendAsync(System.Byte[])">
            <summary>
            Send binary data to the server asynchronously.
            </summary>
            <param name="data">Byte array containing data.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.SendAsync(System.Byte[],System.Net.WebSockets.WebSocketMessageType)">
            <summary>
            Send binary data to the server asynchronously.
            </summary>
            <param name="data">Byte array containing data.</param>
            <param name="msgType">Web socket message type.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsClient.Dispose(System.Boolean)">
            <summary>
            Tear down the client and dispose of background workers.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="T:WatsonWebsocket.WatsonWsServer">
            <summary>
            Watson Websocket server.
            </summary>
        </member>
        <member name="E:WatsonWebsocket.WatsonWsServer.ClientConnected">
            <summary>
            Event fired when a client connects.
            </summary>
        </member>
        <member name="E:WatsonWebsocket.WatsonWsServer.ClientDisconnected">
            <summary>
            Event fired when a client disconnects.
            </summary>
        </member>
        <member name="E:WatsonWebsocket.WatsonWsServer.ServerStopped">
            <summary>
            Event fired when the server stops.
            </summary>
        </member>
        <member name="E:WatsonWebsocket.WatsonWsServer.MessageReceived">
            <summary>
            Event fired when a message is received.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsServer.AcceptInvalidCertificates">
            <summary>
            Indicate whether or not invalid or otherwise unverifiable certificates should be accepted.  Default is true.
            </summary>
        </member>
        <member name="F:WatsonWebsocket.WatsonWsServer.PermittedIpAddresses">
            <summary>
            Specify the IP addresses that are allowed to connect.  If none are supplied, all IP addresses are permitted.
            </summary>
        </member>
        <member name="F:WatsonWebsocket.WatsonWsServer.Logger">
            <summary>
            Method to invoke when sending a log message.
            </summary>
        </member>
        <member name="F:WatsonWebsocket.WatsonWsServer.HttpHandler">
            <summary>
            Method to invoke when receiving a raw (non-websocket) HTTP request.
            </summary>
        </member>
        <member name="P:WatsonWebsocket.WatsonWsServer.Stats">
            <summary>
            Statistics.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Initializes the Watson websocket server.
            Be sure to call 'Start()' to start the server.
            </summary>
            <param name="listenerIp">The IP address upon which to listen.</param>
            <param name="listenerPort">The TCP port upon which to listen.</param>
            <param name="ssl">Enable or disable SSL.</param> 
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.Dispose">
            <summary>
            Tear down the server and dispose of background workers.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.Start">
            <summary>
            Start the server.
            </summary>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.SendAsync(System.String,System.String)">
            <summary>
            Send text data to the specified client, asynchronously.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <param name="data">String containing data.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.SendAsync(System.String,System.Byte[])">
            <summary>
            Send binary data to the specified client, asynchronously.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <param name="data">Byte array containing data.</param> 
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.SendAsync(System.String,System.Byte[],System.Net.WebSockets.WebSocketMessageType)">
            <summary>
            Send binary data to the specified client, asynchronously.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <param name="data">Byte array containing data.</param> 
            <param name="msgType">Web socket message type.</param>
            <returns>Task with Boolean indicating if the message was sent successfully.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.IsClientConnected(System.String)">
            <summary>
            Determine whether or not the specified client is connected to the server.
            </summary>
            <param name="ipPort">IP:port of the recipient client.</param>
            <returns>Boolean indicating if the client is connected to the server.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.ListClients">
            <summary>
            List the IP:port of each connected client.
            </summary>
            <returns>A string list containing each client IP:port.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.DisconnectClient(System.String)">
            <summary>
            Forcefully disconnect a client.
            </summary>
            <param name="ipPort">IP:port of the client.</param>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.GetAwaiter">
            <summary>
            Retrieve the awaiter.
            </summary>
            <returns>TaskAwaiter.</returns>
        </member>
        <member name="M:WatsonWebsocket.WatsonWsServer.Dispose(System.Boolean)">
            <summary>
            Tear down the server and dispose of background workers.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
    </members>
</doc>
